# @formatter\:off

# Server
server.port=8081

# Database
spring.datasource.url=jdbc:postgresql://ol.local:5432/vardb
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=postgresql
spring.liquibase.change-log=classpath:db/changelogs-list.yaml
# Show hibernate SQL for debug purposes
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.security.oauth2.client.registration.keycloak.client-id=LocalSandbox
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/local
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/local
# Redis caching
# TODO enable caching
spring.cache.type=redis
spring.redis.host=ol.local
spring.redis.port=6379
# kafka URL must be provided, not zookeeper's
spring.kafka.bootstrap-servers=ol.local:9092
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
# To allow JSON serialization in all packages
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# Blob storage properties
blob.storage.url=http://ol.local:9010
blob.storage.mediaBucketName=post.media
blob.storage.accessKey=root
blob.storage.secretKey=rootroot

management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoints.web.exposure.include=prometheus